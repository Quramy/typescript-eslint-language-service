// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LanguageService plugin #getCodeFixes should return codeFixes reported by ESLint rules 1`] = `
Object {
  "body": Array [
    Object {
      "changes": Array [
        Object {
          "fileName": "<fileName>",
          "textChanges": Array [
            Object {
              "end": Object {
                "line": 1,
                "offset": 12,
              },
              "newText": ";",
              "start": Object {
                "line": 1,
                "offset": 12,
              },
            },
          ],
        },
      ],
      "description": "Fix: Missing semicolon.",
      "fixId": "semi",
      "fixName": "<fileName>",
    },
  ],
  "command": "getCodeFixes",
  "request_seq": 2,
  "seq": 0,
  "success": true,
  "type": "response",
}
`;

exports[`LanguageService plugin #getSemanticDiagnostics should not reproduce issue #7 1`] = `
Object {
  "body": Object {
    "diagnostics": Array [],
    "file": "<file>",
  },
  "event": "semanticDiag",
  "seq": 0,
  "type": "event",
}
`;

exports[`LanguageService plugin #getSemanticDiagnostics should not return ESLint error when the project does not use @typescript-eslint/parser 1`] = `
Object {
  "body": Object {
    "diagnostics": Array [],
    "file": "<file>",
  },
  "event": "semanticDiag",
  "seq": 0,
  "type": "event",
}
`;

exports[`LanguageService plugin #getSemanticDiagnostics should return ESLint error when the project is configured with ESLint plugins 1`] = `
Object {
  "body": Object {
    "diagnostics": Array [
      Object {
        "category": "error",
        "code": 30010,
        "end": Object {
          "line": 2,
          "offset": 10,
        },
        "start": Object {
          "line": 2,
          "offset": 9,
        },
        "text": "[@typescript-eslint/no-unused-vars] 'a' is assigned a value but never used.",
      },
    ],
    "file": "<file>",
  },
  "event": "semanticDiag",
  "seq": 0,
  "type": "event",
}
`;

exports[`LanguageService plugin #getSemanticDiagnostics should return ESLint error when the project uses @typescript-eslint/parser 1`] = `
Object {
  "body": Object {
    "diagnostics": Array [
      Object {
        "category": "error",
        "code": 30010,
        "end": Object {
          "line": 1,
          "offset": 13,
        },
        "start": Object {
          "line": 1,
          "offset": 12,
        },
        "text": "[semi] Missing semicolon.",
      },
    ],
    "file": "<file>",
  },
  "event": "semanticDiag",
  "seq": 0,
  "type": "event",
}
`;
